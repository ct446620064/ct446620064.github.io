[{"title":"Docker常用命令","date":"2021-01-03T08:13:14.000Z","url":"/2021/01/03/Docker/","tags":[["Docker","/tags/Docker/"]],"categories":[["undefined",""]],"content":"Docker和虚拟机的不同： 传统虚拟机，虚拟出一套硬件，在硬件之上运行一个完整的操作系统，然后在操作系统上安装和运行软件。 容器内的应用直接运行在宿主机的内核上，容器没有自己的内核，也没有虚拟出硬件。 每个容器之间是相互隔离的，每个容器都有一个属于自己的文件系统，互不影响。 Docker镜像命令查看镜像使用方式： docker images [option] [repository[:TAG]] 示例： ​​ 字段名 含义 REPOSITORY 镜像的仓库源 TAG 镜像的标签 IMAGE ID 镜像ID CREATED 镜像创建时间 SIZE 镜像的大小 Option选项 描述 –all , -a # 显示所有镜像 (default hides intermediate images) –digests # Show digests –filter , -f # Filter output based on conditions provided –format # Pretty-print images using a Go template –no-trunc #Don’t truncate output –quiet , -q # Only show image IDs 搜索镜像使用方式： docker search [OPTION] TERM 示例： 查看某个命令的可选项使用方式： docker [命令名称] –help 示例： 下载镜像使用方式： docker pull [OPTION] NAME[:TAG|@DIGEST] 示例： 如果不写TAG，则默认下载最新的镜像。 以下两个命令等价： 指定版本下载： 删除镜像使用方式： docker rmi [OPTIONS] IMAGE [IMAGE…] 示例： 删除所有的镜像： 其中$(docker images -aq)为查询所有镜像的ID Docker容器命令安装centos进行测试 新建容器并运行 docker run [OPTIONS] IMAGE [COMMAND] [ARG…] 示例： 查看容器 docker ps [OPTIONS] 示例： Option名称 描述 -all, -a 显示所有容器 –last, -n 显示最近创建的n个容器 –quiet, -q 只显示容器的ID 退出容器退出并关闭容器 exit 退出但不关闭容器 Ctrl + P + Q "},{"title":"CodeLite调试时查看数组内容","date":"2021-01-03T04:04:33.000Z","url":"/2021/01/03/CodeLite%E8%B0%83%E8%AF%95%E6%97%B6%E6%9F%A5%E7%9C%8B%E6%95%B0%E7%BB%84%E5%86%85%E5%AE%B9/","tags":[["CodeLite","/tags/CodeLite/"]],"categories":[["undefined",""]],"content":"添加监视的变量名为： "},{"title":"vscode配置c++环境","date":"2021-01-02T09:52:52.000Z","url":"/2021/01/02/vscode%E9%85%8D%E7%BD%AEc-%E7%8E%AF%E5%A2%83/","tags":[["vscode","/tags/vscode/"]],"categories":[["undefined",""]],"content":"vscode配置c++环境1.配置c++ IntelliSense使用F1 快捷键打开命令选项，输入C/C++:Edit configuration，然后在.vscode文件夹自动生成c_cpp_properties.json配置文件。 2.launch.json配置文件在debug界面中添加配置，然后选c++(gdb/lgdb)选项，然后自动生成launch.json配置文件，该配置文件主要用于调试时的加载控制。 3.tasks.json配置文件在命令窗口中输入task，选择task:configure task选项，生成task.json配置文件。 注意：task.json中的label属性值要和launch.json中preLaunchTask属性值相同。"},{"title":"article3","date":"2021-01-02T07:44:44.000Z","url":"/2021/01/02/article/index/","categories":[["undefined",""]],"content":"new 了一个layout为page的文章"},{"title":"Hello World","date":"2021-01-01T07:22:59.521Z","url":"/2021/01/01/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]